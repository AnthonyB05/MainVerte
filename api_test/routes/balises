const express = require('express')
const router = express.Router();
const balisesJson = require('../../balises.json');
const Balise = require('../model/balise');
const mongoose = require('mongoose')
const verifyToken = require('../../verifyToken');




router.get('/', verifyToken, (req, res, next) => {
    Balise.find()
        .then(result => {
            res.status(200).json({
                balises: result
            }

            )
        })
})
router.get('/:id', verifyToken, (req, res, next) => {
    console.log(req.params.id)
    Balise.find({ id: req.params.id })
        .then(result => {
            res.status(200).json({
                balise: result
            })
        })
        .catch(err => {
            console.log(err);
            res.status(500).json({
                error: err
            })
        })
})

router.post('/', verifyToken, (req, res, next) => {
    const uneBalise = new Balise({
        id: req.body.id,
        nameBalise: req.body.nameBalise,
        longitude: req.body.longitude,
        latitude: req.body.latitude
    })
    console.log(req.body)
    if (uneBalise.id && uneBalise.nameBalise) {

        uneBalise.save()
            .then(result => {
                console.log(result);
                res.status(200).json({
                    newBalise: result
                })
            })
            .catch(err => {
                console.log(err);
                res.status(500).json({
                    error: err
                });
            })
    }
    else {
        res.status(400).json({
            error: "bad request"
        })
    }

})

router.patch('/:id', verifyToken, (req, res, next) => {
    if (!req.body) {
        return res.status(400).send({
            message: "Data to update can not be empty!"
        })
    }
    else {
        console.log(req.params.id);
        const updateGps = {
            longitude: req.body.longitude,
            latitude: req.body.latitude
        };
        if (typeof (updateGps.longitude) === 'number' && typeof (updateGps.latitude) === 'number') {

            Balise.updateOne({ id: req.params.id }, { $set: updateGps }, (err, docs) => {

                if (!err) {
                    res.status(200).send(docs)
                } else {
                    console.log('Error while updating the data' + JSON.stringify(err, undefined, 2))
                }
            })
        }
        else {
            res.status(250).json({
                error: "miaou"
            });
        }



    };
})


module.exports = router;